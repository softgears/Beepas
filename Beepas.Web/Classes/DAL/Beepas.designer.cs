#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beepas.Web.Classes.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Beepas")]
	public partial class BeepasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWarehouseType(Beepas.Web.Classes.Entities.WarehouseType instance);
    partial void UpdateWarehouseType(Beepas.Web.Classes.Entities.WarehouseType instance);
    partial void DeleteWarehouseType(Beepas.Web.Classes.Entities.WarehouseType instance);
    partial void InsertGoldCoinsPayment(Beepas.Web.Classes.Entities.GoldCoinsPayment instance);
    partial void UpdateGoldCoinsPayment(Beepas.Web.Classes.Entities.GoldCoinsPayment instance);
    partial void DeleteGoldCoinsPayment(Beepas.Web.Classes.Entities.GoldCoinsPayment instance);
    partial void InsertHive(Beepas.Web.Classes.Entities.Hive instance);
    partial void UpdateHive(Beepas.Web.Classes.Entities.Hive instance);
    partial void DeleteHive(Beepas.Web.Classes.Entities.Hive instance);
    partial void InsertHiveType(Beepas.Web.Classes.Entities.HiveType instance);
    partial void UpdateHiveType(Beepas.Web.Classes.Entities.HiveType instance);
    partial void DeleteHiveType(Beepas.Web.Classes.Entities.HiveType instance);
    partial void InsertTransport(Beepas.Web.Classes.Entities.Transport instance);
    partial void UpdateTransport(Beepas.Web.Classes.Entities.Transport instance);
    partial void DeleteTransport(Beepas.Web.Classes.Entities.Transport instance);
    partial void InsertTransportType(Beepas.Web.Classes.Entities.TransportType instance);
    partial void UpdateTransportType(Beepas.Web.Classes.Entities.TransportType instance);
    partial void DeleteTransportType(Beepas.Web.Classes.Entities.TransportType instance);
    partial void InsertUserLoginHistory(Beepas.Web.Classes.Entities.UserLoginHistory instance);
    partial void UpdateUserLoginHistory(Beepas.Web.Classes.Entities.UserLoginHistory instance);
    partial void DeleteUserLoginHistory(Beepas.Web.Classes.Entities.UserLoginHistory instance);
    partial void InsertWarehouse(Beepas.Web.Classes.Entities.Warehouse instance);
    partial void UpdateWarehouse(Beepas.Web.Classes.Entities.Warehouse instance);
    partial void DeleteWarehouse(Beepas.Web.Classes.Entities.Warehouse instance);
    partial void InsertUser(Beepas.Web.Classes.Entities.User instance);
    partial void UpdateUser(Beepas.Web.Classes.Entities.User instance);
    partial void DeleteUser(Beepas.Web.Classes.Entities.User instance);
    partial void InsertGoldBarsPayment(Beepas.Web.Classes.Entities.GoldBarsPayment instance);
    partial void UpdateGoldBarsPayment(Beepas.Web.Classes.Entities.GoldBarsPayment instance);
    partial void DeleteGoldBarsPayment(Beepas.Web.Classes.Entities.GoldBarsPayment instance);
    partial void InsertRank(Beepas.Web.Classes.Entities.Rank instance);
    partial void UpdateRank(Beepas.Web.Classes.Entities.Rank instance);
    partial void DeleteRank(Beepas.Web.Classes.Entities.Rank instance);
    partial void InsertAutoCollector(Beepas.Web.Classes.Entities.AutoCollector instance);
    partial void UpdateAutoCollector(Beepas.Web.Classes.Entities.AutoCollector instance);
    partial void DeleteAutoCollector(Beepas.Web.Classes.Entities.AutoCollector instance);
    partial void InsertAutoCollectorType(Beepas.Web.Classes.Entities.AutoCollectorType instance);
    partial void UpdateAutoCollectorType(Beepas.Web.Classes.Entities.AutoCollectorType instance);
    partial void DeleteAutoCollectorType(Beepas.Web.Classes.Entities.AutoCollectorType instance);
    #endregion
		
		public BeepasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeepasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeepasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeepasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.WarehouseType> WarehouseTypes
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.WarehouseType>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.GoldCoinsPayment> GoldCoinsPayments
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.GoldCoinsPayment>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.Hive> Hives
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.Hive>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.HiveType> HiveTypes
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.HiveType>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.Transport> Transports
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.Transport>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.TransportType> TransportTypes
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.TransportType>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.UserLoginHistory> UserLoginHistories
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.UserLoginHistory>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.Warehouse> Warehouses
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.User> Users
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.User>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.GoldBarsPayment> GoldBarsPayments
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.GoldBarsPayment>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.Rank> Ranks
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.Rank>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.AutoCollector> AutoCollectors
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.AutoCollector>();
			}
		}
		
		public System.Data.Linq.Table<Beepas.Web.Classes.Entities.AutoCollectorType> AutoCollectorTypes
		{
			get
			{
				return this.GetTable<Beepas.Web.Classes.Entities.AutoCollectorType>();
			}
		}
	}
}
namespace Beepas.Web.Classes.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarehouseTypes")]
	public partial class WarehouseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Level;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private decimal _Price;
		
		private decimal _Capacity;
		
		private decimal _LoadingRate;
		
		private bool _CanBuy;
		
		private EntitySet<Warehouse> _Warehouses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCapacityChanging(decimal value);
    partial void OnCapacityChanged();
    partial void OnLoadingRateChanging(decimal value);
    partial void OnLoadingRateChanged();
    partial void OnCanBuyChanging(bool value);
    partial void OnCanBuyChanged();
    #endregion
		
		public WarehouseType()
		{
			this._Warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses), new Action<Warehouse>(this.detach_Warehouses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Money NOT NULL")]
		public decimal Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadingRate", DbType="Money NOT NULL")]
		public decimal LoadingRate
		{
			get
			{
				return this._LoadingRate;
			}
			set
			{
				if ((this._LoadingRate != value))
				{
					this.OnLoadingRateChanging(value);
					this.SendPropertyChanging();
					this._LoadingRate = value;
					this.SendPropertyChanged("LoadingRate");
					this.OnLoadingRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBuy", DbType="Bit NOT NULL")]
		public bool CanBuy
		{
			get
			{
				return this._CanBuy;
			}
			set
			{
				if ((this._CanBuy != value))
				{
					this.OnCanBuyChanging(value);
					this.SendPropertyChanging();
					this._CanBuy = value;
					this.SendPropertyChanged("CanBuy");
					this.OnCanBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WarehouseType_Warehouse", Storage="_Warehouses", ThisKey="Id", OtherKey="WarehouseTypeId")]
		public EntitySet<Warehouse> Warehouses
		{
			get
			{
				return this._Warehouses;
			}
			set
			{
				this._Warehouses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.WarehouseType = this;
		}
		
		private void detach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.WarehouseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoldCoinsPayments")]
	public partial class GoldCoinsPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private short _Direction;
		
		private decimal _Amount;
		
		private string _Description;
		
		private bool _Completed;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnDirectionChanging(short value);
    partial void OnDirectionChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public GoldCoinsPayment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="SmallInt NOT NULL")]
		public short Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GoldCoinsPayment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GoldCoinsPayments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GoldCoinsPayments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hives")]
	public partial class Hive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _HiveTypeId;
		
		private decimal _CurrentHoney;
		
		private string _Notes;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _OperationStartTime;
		
		private System.Nullable<System.DateTime> _OperationEndTime;
		
		private bool _HasAutoCollector;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<AutoCollector> _AutoCollectors;
		
		private EntityRef<HiveType> _HiveType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnHiveTypeIdChanging(long value);
    partial void OnHiveTypeIdChanged();
    partial void OnCurrentHoneyChanging(decimal value);
    partial void OnCurrentHoneyChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnOperationStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationStartTimeChanged();
    partial void OnOperationEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationEndTimeChanged();
    partial void OnHasAutoCollectorChanging(bool value);
    partial void OnHasAutoCollectorChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Hive()
		{
			this._AutoCollectors = default(EntityRef<AutoCollector>);
			this._HiveType = default(EntityRef<HiveType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiveTypeId", DbType="BigInt NOT NULL")]
		public long HiveTypeId
		{
			get
			{
				return this._HiveTypeId;
			}
			set
			{
				if ((this._HiveTypeId != value))
				{
					if (this._HiveType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HiveTypeId = value;
					this.SendPropertyChanged("HiveTypeId");
					this.OnHiveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentHoney", DbType="Money NOT NULL")]
		public decimal CurrentHoney
		{
			get
			{
				return this._CurrentHoney;
			}
			set
			{
				if ((this._CurrentHoney != value))
				{
					this.OnCurrentHoneyChanging(value);
					this.SendPropertyChanging();
					this._CurrentHoney = value;
					this.SendPropertyChanged("CurrentHoney");
					this.OnCurrentHoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationStartTime
		{
			get
			{
				return this._OperationStartTime;
			}
			set
			{
				if ((this._OperationStartTime != value))
				{
					this.OnOperationStartTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationStartTime = value;
					this.SendPropertyChanged("OperationStartTime");
					this.OnOperationStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationEndTime
		{
			get
			{
				return this._OperationEndTime;
			}
			set
			{
				if ((this._OperationEndTime != value))
				{
					this.OnOperationEndTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationEndTime = value;
					this.SendPropertyChanged("OperationEndTime");
					this.OnOperationEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAutoCollector", DbType="Bit NOT NULL")]
		public bool HasAutoCollector
		{
			get
			{
				return this._HasAutoCollector;
			}
			set
			{
				if ((this._HasAutoCollector != value))
				{
					this.OnHasAutoCollectorChanging(value);
					this.SendPropertyChanging();
					this._HasAutoCollector = value;
					this.SendPropertyChanged("HasAutoCollector");
					this.OnHasAutoCollectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hive_AutoCollector", Storage="_AutoCollectors", ThisKey="Id", OtherKey="HiveId", IsUnique=true, IsForeignKey=false)]
		public AutoCollector AutoCollectors
		{
			get
			{
				return this._AutoCollectors.Entity;
			}
			set
			{
				AutoCollector previousValue = this._AutoCollectors.Entity;
				if (((previousValue != value) 
							|| (this._AutoCollectors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutoCollectors.Entity = null;
						previousValue.Hive = null;
					}
					this._AutoCollectors.Entity = value;
					if ((value != null))
					{
						value.Hive = this;
					}
					this.SendPropertyChanged("AutoCollectors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HiveType_Hive", Storage="_HiveType", ThisKey="HiveTypeId", OtherKey="Id", IsForeignKey=true)]
		public HiveType HiveType
		{
			get
			{
				return this._HiveType.Entity;
			}
			set
			{
				HiveType previousValue = this._HiveType.Entity;
				if (((previousValue != value) 
							|| (this._HiveType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HiveType.Entity = null;
						previousValue.Hives.Remove(this);
					}
					this._HiveType.Entity = value;
					if ((value != null))
					{
						value.Hives.Add(this);
						this._HiveTypeId = value.Id;
					}
					else
					{
						this._HiveTypeId = default(long);
					}
					this.SendPropertyChanged("HiveType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Hive", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Hives.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Hives.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HiveTypes")]
	public partial class HiveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Level;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private decimal _Price;
		
		private decimal _ProductionRate;
		
		private decimal _Capacity;
		
		private bool _CanBuy;
		
		private EntitySet<Hive> _Hives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnProductionRateChanging(decimal value);
    partial void OnProductionRateChanged();
    partial void OnCapacityChanging(decimal value);
    partial void OnCapacityChanged();
    partial void OnCanBuyChanging(bool value);
    partial void OnCanBuyChanged();
    #endregion
		
		public HiveType()
		{
			this._Hives = new EntitySet<Hive>(new Action<Hive>(this.attach_Hives), new Action<Hive>(this.detach_Hives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionRate", DbType="Money NOT NULL")]
		public decimal ProductionRate
		{
			get
			{
				return this._ProductionRate;
			}
			set
			{
				if ((this._ProductionRate != value))
				{
					this.OnProductionRateChanging(value);
					this.SendPropertyChanging();
					this._ProductionRate = value;
					this.SendPropertyChanged("ProductionRate");
					this.OnProductionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Money NOT NULL")]
		public decimal Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBuy", DbType="Bit NOT NULL")]
		public bool CanBuy
		{
			get
			{
				return this._CanBuy;
			}
			set
			{
				if ((this._CanBuy != value))
				{
					this.OnCanBuyChanging(value);
					this.SendPropertyChanging();
					this._CanBuy = value;
					this.SendPropertyChanged("CanBuy");
					this.OnCanBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HiveType_Hive", Storage="_Hives", ThisKey="Id", OtherKey="HiveTypeId")]
		public EntitySet<Hive> Hives
		{
			get
			{
				return this._Hives;
			}
			set
			{
				this._Hives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hives(Hive entity)
		{
			this.SendPropertyChanging();
			entity.HiveType = this;
		}
		
		private void detach_Hives(Hive entity)
		{
			this.SendPropertyChanging();
			entity.HiveType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transports")]
	public partial class Transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _TransportTypeId;
		
		private string _Notes;
		
		private decimal _CurrentHoney;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _OperationStartTime;
		
		private System.Nullable<System.DateTime> _OperationEndTime;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<TransportType> _TransportType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTransportTypeIdChanging(long value);
    partial void OnTransportTypeIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCurrentHoneyChanging(decimal value);
    partial void OnCurrentHoneyChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnOperationStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationStartTimeChanged();
    partial void OnOperationEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationEndTimeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Transport()
		{
			this._TransportType = default(EntityRef<TransportType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportTypeId", DbType="BigInt NOT NULL")]
		public long TransportTypeId
		{
			get
			{
				return this._TransportTypeId;
			}
			set
			{
				if ((this._TransportTypeId != value))
				{
					if (this._TransportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransportTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TransportTypeId = value;
					this.SendPropertyChanged("TransportTypeId");
					this.OnTransportTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentHoney", DbType="Money NOT NULL")]
		public decimal CurrentHoney
		{
			get
			{
				return this._CurrentHoney;
			}
			set
			{
				if ((this._CurrentHoney != value))
				{
					this.OnCurrentHoneyChanging(value);
					this.SendPropertyChanging();
					this._CurrentHoney = value;
					this.SendPropertyChanged("CurrentHoney");
					this.OnCurrentHoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationStartTime
		{
			get
			{
				return this._OperationStartTime;
			}
			set
			{
				if ((this._OperationStartTime != value))
				{
					this.OnOperationStartTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationStartTime = value;
					this.SendPropertyChanged("OperationStartTime");
					this.OnOperationStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationEndTime
		{
			get
			{
				return this._OperationEndTime;
			}
			set
			{
				if ((this._OperationEndTime != value))
				{
					this.OnOperationEndTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationEndTime = value;
					this.SendPropertyChanged("OperationEndTime");
					this.OnOperationEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportType_Transport", Storage="_TransportType", ThisKey="TransportTypeId", OtherKey="Id", IsForeignKey=true)]
		public TransportType TransportType
		{
			get
			{
				return this._TransportType.Entity;
			}
			set
			{
				TransportType previousValue = this._TransportType.Entity;
				if (((previousValue != value) 
							|| (this._TransportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportType.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._TransportType.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._TransportTypeId = value.Id;
					}
					else
					{
						this._TransportTypeId = default(long);
					}
					this.SendPropertyChanged("TransportType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transport", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportTypes")]
	public partial class TransportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Level;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private decimal _Price;
		
		private decimal _Capacity;
		
		private double _SpeedRate;
		
		private bool _CanBuy;
		
		private EntitySet<Transport> _Transports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCapacityChanging(decimal value);
    partial void OnCapacityChanged();
    partial void OnSpeedRateChanging(double value);
    partial void OnSpeedRateChanged();
    partial void OnCanBuyChanging(bool value);
    partial void OnCanBuyChanged();
    #endregion
		
		public TransportType()
		{
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Money NOT NULL")]
		public decimal Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeedRate", DbType="Float NOT NULL")]
		public double SpeedRate
		{
			get
			{
				return this._SpeedRate;
			}
			set
			{
				if ((this._SpeedRate != value))
				{
					this.OnSpeedRateChanging(value);
					this.SendPropertyChanging();
					this._SpeedRate = value;
					this.SendPropertyChanged("SpeedRate");
					this.OnSpeedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBuy", DbType="Bit NOT NULL")]
		public bool CanBuy
		{
			get
			{
				return this._CanBuy;
			}
			set
			{
				if ((this._CanBuy != value))
				{
					this.OnCanBuyChanging(value);
					this.SendPropertyChanging();
					this._CanBuy = value;
					this.SendPropertyChanged("CanBuy");
					this.OnCanBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportType_Transport", Storage="_Transports", ThisKey="Id", OtherKey="TransportTypeId")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.TransportType = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.TransportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLoginHistory")]
	public partial class UserLoginHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private System.DateTime _LoginDateTime;
		
		private string _LoginIP;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnLoginDateTimeChanging(System.DateTime value);
    partial void OnLoginDateTimeChanged();
    partial void OnLoginIPChanging(string value);
    partial void OnLoginIPChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public UserLoginHistory()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDateTime
		{
			get
			{
				return this._LoginDateTime;
			}
			set
			{
				if ((this._LoginDateTime != value))
				{
					this.OnLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginDateTime = value;
					this.SendPropertyChanged("LoginDateTime");
					this.OnLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginIP", DbType="NVarChar(255)")]
		public string LoginIP
		{
			get
			{
				return this._LoginIP;
			}
			set
			{
				if ((this._LoginIP != value))
				{
					this.OnLoginIPChanging(value);
					this.SendPropertyChanging();
					this._LoginIP = value;
					this.SendPropertyChanged("LoginIP");
					this.OnLoginIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistory", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLoginHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLoginHistories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warehouses")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _WarehouseTypeId;
		
		private string _Notes;
		
		private decimal _CurrentHoney;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _OperationStartTime;
		
		private System.Nullable<System.DateTime> _OperationEndTime;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<WarehouseType> _WarehouseType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnWarehouseTypeIdChanging(long value);
    partial void OnWarehouseTypeIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCurrentHoneyChanging(decimal value);
    partial void OnCurrentHoneyChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnOperationStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationStartTimeChanged();
    partial void OnOperationEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationEndTimeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Warehouse()
		{
			this._WarehouseType = default(EntityRef<WarehouseType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseTypeId", DbType="BigInt NOT NULL")]
		public long WarehouseTypeId
		{
			get
			{
				return this._WarehouseTypeId;
			}
			set
			{
				if ((this._WarehouseTypeId != value))
				{
					if (this._WarehouseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseTypeId = value;
					this.SendPropertyChanged("WarehouseTypeId");
					this.OnWarehouseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentHoney", DbType="Money NOT NULL")]
		public decimal CurrentHoney
		{
			get
			{
				return this._CurrentHoney;
			}
			set
			{
				if ((this._CurrentHoney != value))
				{
					this.OnCurrentHoneyChanging(value);
					this.SendPropertyChanging();
					this._CurrentHoney = value;
					this.SendPropertyChanged("CurrentHoney");
					this.OnCurrentHoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationStartTime
		{
			get
			{
				return this._OperationStartTime;
			}
			set
			{
				if ((this._OperationStartTime != value))
				{
					this.OnOperationStartTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationStartTime = value;
					this.SendPropertyChanged("OperationStartTime");
					this.OnOperationStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationEndTime
		{
			get
			{
				return this._OperationEndTime;
			}
			set
			{
				if ((this._OperationEndTime != value))
				{
					this.OnOperationEndTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationEndTime = value;
					this.SendPropertyChanged("OperationEndTime");
					this.OnOperationEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WarehouseType_Warehouse", Storage="_WarehouseType", ThisKey="WarehouseTypeId", OtherKey="Id", IsForeignKey=true)]
		public WarehouseType WarehouseType
		{
			get
			{
				return this._WarehouseType.Entity;
			}
			set
			{
				WarehouseType previousValue = this._WarehouseType.Entity;
				if (((previousValue != value) 
							|| (this._WarehouseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WarehouseType.Entity = null;
						previousValue.Warehouses.Remove(this);
					}
					this._WarehouseType.Entity = value;
					if ((value != null))
					{
						value.Warehouses.Add(this);
						this._WarehouseTypeId = value.Id;
					}
					else
					{
						this._WarehouseTypeId = default(long);
					}
					this.SendPropertyChanged("WarehouseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Warehouse", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Warehouses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Warehouses.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Login;
		
		private string _PasswordHash;
		
		private string _LoginProvider;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _CellPhone;
		
		private string _AvatarUrl;
		
		private long _ReferalId;
		
		private short _Status;
		
		private short _AccountLevel;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private string _City;
		
		private bool _IsAdmin;
		
		private decimal _TotalHoney;
		
		private long _Rank;
		
		private System.Nullable<System.DateTime> _DateRegistred;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GoldCoinsPayment> _GoldCoinsPayments;
		
		private EntitySet<Hive> _Hives;
		
		private EntitySet<Transport> _Transports;
		
		private EntitySet<UserLoginHistory> _UserLoginHistories;
		
		private EntitySet<Warehouse> _Warehouses;
		
		private EntitySet<User> _Refferers;
		
		private EntitySet<GoldBarsPayment> _GoldBarsPayments;
		
		private EntityRef<User> _Refferer;
		
		private EntityRef<Rank> _UserRank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnAvatarUrlChanging(string value);
    partial void OnAvatarUrlChanged();
    partial void OnReferalIdChanging(long value);
    partial void OnReferalIdChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnAccountLevelChanging(short value);
    partial void OnAccountLevelChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnTotalHoneyChanging(decimal value);
    partial void OnTotalHoneyChanged();
    partial void OnRankChanging(long value);
    partial void OnRankChanged();
    partial void OnDateRegistredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegistredChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public User()
		{
			this._GoldCoinsPayments = new EntitySet<GoldCoinsPayment>(new Action<GoldCoinsPayment>(this.attach_GoldCoinsPayments), new Action<GoldCoinsPayment>(this.detach_GoldCoinsPayments));
			this._Hives = new EntitySet<Hive>(new Action<Hive>(this.attach_Hives), new Action<Hive>(this.detach_Hives));
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			this._UserLoginHistories = new EntitySet<UserLoginHistory>(new Action<UserLoginHistory>(this.attach_UserLoginHistories), new Action<UserLoginHistory>(this.detach_UserLoginHistories));
			this._Warehouses = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouses), new Action<Warehouse>(this.detach_Warehouses));
			this._Refferers = new EntitySet<User>(new Action<User>(this.attach_Refferers), new Action<User>(this.detach_Refferers));
			this._GoldBarsPayments = new EntitySet<GoldBarsPayment>(new Action<GoldBarsPayment>(this.attach_GoldBarsPayments), new Action<GoldBarsPayment>(this.detach_GoldBarsPayments));
			this._Refferer = default(EntityRef<User>);
			this._UserRank = default(EntityRef<Rank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(255)")]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(255)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarUrl", DbType="NVarChar(MAX)")]
		public string AvatarUrl
		{
			get
			{
				return this._AvatarUrl;
			}
			set
			{
				if ((this._AvatarUrl != value))
				{
					this.OnAvatarUrlChanging(value);
					this.SendPropertyChanging();
					this._AvatarUrl = value;
					this.SendPropertyChanged("AvatarUrl");
					this.OnAvatarUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferalId", DbType="BigInt NOT NULL")]
		public long ReferalId
		{
			get
			{
				return this._ReferalId;
			}
			set
			{
				if ((this._ReferalId != value))
				{
					if (this._Refferer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferalIdChanging(value);
					this.SendPropertyChanging();
					this._ReferalId = value;
					this.SendPropertyChanged("ReferalId");
					this.OnReferalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountLevel", DbType="SmallInt NOT NULL")]
		public short AccountLevel
		{
			get
			{
				return this._AccountLevel;
			}
			set
			{
				if ((this._AccountLevel != value))
				{
					this.OnAccountLevelChanging(value);
					this.SendPropertyChanging();
					this._AccountLevel = value;
					this.SendPropertyChanged("AccountLevel");
					this.OnAccountLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHoney", DbType="Money NOT NULL")]
		public decimal TotalHoney
		{
			get
			{
				return this._TotalHoney;
			}
			set
			{
				if ((this._TotalHoney != value))
				{
					this.OnTotalHoneyChanging(value);
					this.SendPropertyChanging();
					this._TotalHoney = value;
					this.SendPropertyChanged("TotalHoney");
					this.OnTotalHoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="BigInt NOT NULL")]
		public long Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					if (this._UserRank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistred", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistred
		{
			get
			{
				return this._DateRegistred;
			}
			set
			{
				if ((this._DateRegistred != value))
				{
					this.OnDateRegistredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistred = value;
					this.SendPropertyChanged("DateRegistred");
					this.OnDateRegistredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GoldCoinsPayment", Storage="_GoldCoinsPayments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<GoldCoinsPayment> GoldCoinsPayments
		{
			get
			{
				return this._GoldCoinsPayments;
			}
			set
			{
				this._GoldCoinsPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Hive", Storage="_Hives", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Hive> Hives
		{
			get
			{
				return this._Hives;
			}
			set
			{
				this._Hives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transport", Storage="_Transports", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistory", Storage="_UserLoginHistories", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserLoginHistory> UserLoginHistories
		{
			get
			{
				return this._UserLoginHistories;
			}
			set
			{
				this._UserLoginHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Warehouse", Storage="_Warehouses", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Warehouse> Warehouses
		{
			get
			{
				return this._Warehouses;
			}
			set
			{
				this._Warehouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_Refferers", ThisKey="Id", OtherKey="ReferalId")]
		public EntitySet<User> Refferers
		{
			get
			{
				return this._Refferers;
			}
			set
			{
				this._Refferers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GoldBarsPayment", Storage="_GoldBarsPayments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<GoldBarsPayment> GoldBarsPayments
		{
			get
			{
				return this._GoldBarsPayments;
			}
			set
			{
				this._GoldBarsPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_Refferer", ThisKey="ReferalId", OtherKey="Id", IsForeignKey=true)]
		public User Refferer
		{
			get
			{
				return this._Refferer.Entity;
			}
			set
			{
				User previousValue = this._Refferer.Entity;
				if (((previousValue != value) 
							|| (this._Refferer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Refferer.Entity = null;
						previousValue.Refferers.Remove(this);
					}
					this._Refferer.Entity = value;
					if ((value != null))
					{
						value.Refferers.Add(this);
						this._ReferalId = value.Id;
					}
					else
					{
						this._ReferalId = default(long);
					}
					this.SendPropertyChanged("Refferer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_User", Storage="_UserRank", ThisKey="Rank", OtherKey="Id", IsForeignKey=true)]
		public Rank UserRank
		{
			get
			{
				return this._UserRank.Entity;
			}
			set
			{
				Rank previousValue = this._UserRank.Entity;
				if (((previousValue != value) 
							|| (this._UserRank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRank.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserRank.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Rank = value.Id;
					}
					else
					{
						this._Rank = default(long);
					}
					this.SendPropertyChanged("UserRank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GoldCoinsPayments(GoldCoinsPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GoldCoinsPayments(GoldCoinsPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Hives(Hive entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Hives(Hive entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLoginHistories(UserLoginHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLoginHistories(UserLoginHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Warehouses(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Refferers(User entity)
		{
			this.SendPropertyChanging();
			entity.Refferer = this;
		}
		
		private void detach_Refferers(User entity)
		{
			this.SendPropertyChanging();
			entity.Refferer = null;
		}
		
		private void attach_GoldBarsPayments(GoldBarsPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GoldBarsPayments(GoldBarsPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoldBarsPayments")]
	public partial class GoldBarsPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private short _Direction;
		
		private decimal _Amount;
		
		private string _Description;
		
		private bool _Completed;
		
		private short _Appointment;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnDirectionChanging(short value);
    partial void OnDirectionChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnAppointmentChanging(short value);
    partial void OnAppointmentChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public GoldBarsPayment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="SmallInt NOT NULL")]
		public short Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointment", DbType="SmallInt NOT NULL")]
		public short Appointment
		{
			get
			{
				return this._Appointment;
			}
			set
			{
				if ((this._Appointment != value))
				{
					this.OnAppointmentChanging(value);
					this.SendPropertyChanging();
					this._Appointment = value;
					this.SendPropertyChanged("Appointment");
					this.OnAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GoldBarsPayment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GoldBarsPayments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GoldBarsPayments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ranks")]
	public partial class Rank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Level;
		
		private string _Title;
		
		private decimal _RequiredHoney;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRequiredHoneyChanging(decimal value);
    partial void OnRequiredHoneyChanged();
    #endregion
		
		public Rank()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredHoney", DbType="Money NOT NULL")]
		public decimal RequiredHoney
		{
			get
			{
				return this._RequiredHoney;
			}
			set
			{
				if ((this._RequiredHoney != value))
				{
					this.OnRequiredHoneyChanging(value);
					this.SendPropertyChanging();
					this._RequiredHoney = value;
					this.SendPropertyChanged("RequiredHoney");
					this.OnRequiredHoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_User", Storage="_Users", ThisKey="Id", OtherKey="Rank")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRank = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoCollectors")]
	public partial class AutoCollector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _HiveId;
		
		private long _AutoCollectorTypeId;
		
		private decimal _CollectedToday;
		
		private System.Nullable<System.DateTime> _DateBuyed;
		
		private System.Nullable<System.DateTime> _Expiration;
		
		private EntityRef<Hive> _Hive;
		
		private EntityRef<AutoCollectorType> _AutoCollectorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnHiveIdChanging(long value);
    partial void OnHiveIdChanged();
    partial void OnAutoCollectorTypeIdChanging(long value);
    partial void OnAutoCollectorTypeIdChanged();
    partial void OnCollectedTodayChanging(decimal value);
    partial void OnCollectedTodayChanged();
    partial void OnDateBuyedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBuyedChanged();
    partial void OnExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationChanged();
    #endregion
		
		public AutoCollector()
		{
			this._Hive = default(EntityRef<Hive>);
			this._AutoCollectorType = default(EntityRef<AutoCollectorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiveId", DbType="BigInt NOT NULL")]
		public long HiveId
		{
			get
			{
				return this._HiveId;
			}
			set
			{
				if ((this._HiveId != value))
				{
					if (this._Hive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHiveIdChanging(value);
					this.SendPropertyChanging();
					this._HiveId = value;
					this.SendPropertyChanged("HiveId");
					this.OnHiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCollectorTypeId", DbType="BigInt NOT NULL")]
		public long AutoCollectorTypeId
		{
			get
			{
				return this._AutoCollectorTypeId;
			}
			set
			{
				if ((this._AutoCollectorTypeId != value))
				{
					if (this._AutoCollectorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutoCollectorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AutoCollectorTypeId = value;
					this.SendPropertyChanged("AutoCollectorTypeId");
					this.OnAutoCollectorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectedToday", DbType="Money NOT NULL")]
		public decimal CollectedToday
		{
			get
			{
				return this._CollectedToday;
			}
			set
			{
				if ((this._CollectedToday != value))
				{
					this.OnCollectedTodayChanging(value);
					this.SendPropertyChanging();
					this._CollectedToday = value;
					this.SendPropertyChanged("CollectedToday");
					this.OnCollectedTodayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBuyed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBuyed
		{
			get
			{
				return this._DateBuyed;
			}
			set
			{
				if ((this._DateBuyed != value))
				{
					this.OnDateBuyedChanging(value);
					this.SendPropertyChanging();
					this._DateBuyed = value;
					this.SendPropertyChanged("DateBuyed");
					this.OnDateBuyedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expiration
		{
			get
			{
				return this._Expiration;
			}
			set
			{
				if ((this._Expiration != value))
				{
					this.OnExpirationChanging(value);
					this.SendPropertyChanging();
					this._Expiration = value;
					this.SendPropertyChanged("Expiration");
					this.OnExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hive_AutoCollector", Storage="_Hive", ThisKey="HiveId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hive Hive
		{
			get
			{
				return this._Hive.Entity;
			}
			set
			{
				Hive previousValue = this._Hive.Entity;
				if (((previousValue != value) 
							|| (this._Hive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hive.Entity = null;
						previousValue.AutoCollectors = null;
					}
					this._Hive.Entity = value;
					if ((value != null))
					{
						value.AutoCollectors = this;
						this._HiveId = value.Id;
					}
					else
					{
						this._HiveId = default(long);
					}
					this.SendPropertyChanged("Hive");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoCollectorType_AutoCollector", Storage="_AutoCollectorType", ThisKey="AutoCollectorTypeId", OtherKey="Id", IsForeignKey=true)]
		public AutoCollectorType AutoCollectorType
		{
			get
			{
				return this._AutoCollectorType.Entity;
			}
			set
			{
				AutoCollectorType previousValue = this._AutoCollectorType.Entity;
				if (((previousValue != value) 
							|| (this._AutoCollectorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutoCollectorType.Entity = null;
						previousValue.AutoCollectors.Remove(this);
					}
					this._AutoCollectorType.Entity = value;
					if ((value != null))
					{
						value.AutoCollectors.Add(this);
						this._AutoCollectorTypeId = value.Id;
					}
					else
					{
						this._AutoCollectorTypeId = default(long);
					}
					this.SendPropertyChanged("AutoCollectorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoCollectorTypes")]
	public partial class AutoCollectorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Level;
		
		private decimal _DailyRate;
		
		private decimal _DayPrice;
		
		private decimal _WeekPrice;
		
		private decimal _MonthPrice;
		
		private EntitySet<AutoCollector> _AutoCollectors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnDailyRateChanging(decimal value);
    partial void OnDailyRateChanged();
    partial void OnDayPriceChanging(decimal value);
    partial void OnDayPriceChanged();
    partial void OnWeekPriceChanging(decimal value);
    partial void OnWeekPriceChanged();
    partial void OnMonthPriceChanging(decimal value);
    partial void OnMonthPriceChanged();
    #endregion
		
		public AutoCollectorType()
		{
			this._AutoCollectors = new EntitySet<AutoCollector>(new Action<AutoCollector>(this.attach_AutoCollectors), new Action<AutoCollector>(this.detach_AutoCollectors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Money NOT NULL")]
		public decimal DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this.OnDailyRateChanging(value);
					this.SendPropertyChanging();
					this._DailyRate = value;
					this.SendPropertyChanged("DailyRate");
					this.OnDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayPrice", DbType="Money NOT NULL")]
		public decimal DayPrice
		{
			get
			{
				return this._DayPrice;
			}
			set
			{
				if ((this._DayPrice != value))
				{
					this.OnDayPriceChanging(value);
					this.SendPropertyChanging();
					this._DayPrice = value;
					this.SendPropertyChanged("DayPrice");
					this.OnDayPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekPrice", DbType="Money NOT NULL")]
		public decimal WeekPrice
		{
			get
			{
				return this._WeekPrice;
			}
			set
			{
				if ((this._WeekPrice != value))
				{
					this.OnWeekPriceChanging(value);
					this.SendPropertyChanging();
					this._WeekPrice = value;
					this.SendPropertyChanged("WeekPrice");
					this.OnWeekPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthPrice", DbType="Money NOT NULL")]
		public decimal MonthPrice
		{
			get
			{
				return this._MonthPrice;
			}
			set
			{
				if ((this._MonthPrice != value))
				{
					this.OnMonthPriceChanging(value);
					this.SendPropertyChanging();
					this._MonthPrice = value;
					this.SendPropertyChanged("MonthPrice");
					this.OnMonthPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoCollectorType_AutoCollector", Storage="_AutoCollectors", ThisKey="Id", OtherKey="AutoCollectorTypeId")]
		public EntitySet<AutoCollector> AutoCollectors
		{
			get
			{
				return this._AutoCollectors;
			}
			set
			{
				this._AutoCollectors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutoCollectors(AutoCollector entity)
		{
			this.SendPropertyChanging();
			entity.AutoCollectorType = this;
		}
		
		private void detach_AutoCollectors(AutoCollector entity)
		{
			this.SendPropertyChanging();
			entity.AutoCollectorType = null;
		}
	}
}
#pragma warning restore 1591
